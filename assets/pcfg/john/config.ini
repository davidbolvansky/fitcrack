[TRAINING_PROGRAM_DETAILS]
program = pcfg_trainer.py
author = Matt Weir, Radek Hranicky
version = 3.3m
contact = cweir@vt.edu, ihranicky.fit.vutbr.cz

[TRAINING_DATASET_DETAILS]
smoothing = 0.01
encoding = ascii
filename = /home/ihranicky/datasets/original/john.txt
comments = None
number_of_passwords_in_set = 3107
number_of_valid_passwords = 3106

[START]
is_terminal = False
inject_type = Wordlist
comments = Standard base structures as defined by the original PCFG Paper, with some renaming to prevent naming collisions. Examples are A4D2 from the training word "pass12"
function = Transparent
directory = Grammar
filenames = ["Grammar.txt"]
file_type = Flat
name = Base Structure
replacements = [{"Transition_id": "A", "Config_id": "BASE_A"}, {"Transition_id": "D", "Config_id": "BASE_D"}, {"Transition_id": "O", "Config_id": "BASE_O"}, {"Transition_id": "K", "Config_id": "BASE_K"}, {"Transition_id": "X", "Config_id": "BASE_X"}, {"Transition_id": "M", "Config_id": "BASE_M"}]

[BASE_A]
is_terminal = False
inject_type = Wordlist
comments = (A)lpha letter replacements for base structure. Aka "pass12" = A4D2, so this is the A4. Note, this is encoding specific so non-ASCII characters may be considered alpha. For example Cyrillic characters will be considered alpha characters
function = Shadow
directory = Alpha
filenames = ["1.txt", "2.txt", "3.txt", "4.txt", "5.txt", "6.txt", "7.txt", "8.txt", "9.txt", "10.txt", "11.txt", "13.txt"]
file_type = Length
name = A
replacements = [{"Transition_id": "Capitalization", "Config_id": "CAPITALIZATION"}]

[BASE_D]
is_terminal = True
inject_type = Copy
comments = (D)igit replacement for base structure. Aka "pass12" = L4D2, so this is the D2
function = Copy
directory = Digits
filenames = ["1.txt", "2.txt", "3.txt", "4.txt", "5.txt", "6.txt", "7.txt", "8.txt"]
file_type = Length
name = D

[BASE_O]
is_terminal = True
inject_type = Copy
comments = (O)ther character replacement for base structure. Aka "pass$$" = L4S2, so this is the S2
function = Copy
directory = Other
filenames = ["8.txt", "1.txt", "5.txt", "6.txt", "7.txt"]
file_type = Length
name = O

[CAPITALIZATION]
is_terminal = True
inject_type = Copy
comments = Capitalization Masks for words. Aka LLLLUUUU for passWORD
function = Capitalization
directory = Capitalization
filenames = ["1.txt", "2.txt", "3.txt", "4.txt", "5.txt", "6.txt", "7.txt", "8.txt", "9.txt", "10.txt", "11.txt", "13.txt"]
file_type = Length
name = Capitalization

[BASE_K]
is_terminal = True
inject_type = Copy
comments = (K)eyboard replacement for base structure. Aka "test1qaz2wsx" = L4K4K4, so this is the K4s
function = Copy
directory = Keyboard
filenames = []
file_type = Length
name = K

[BASE_X]
is_terminal = True
inject_type = Copy
comments = conte(X)t sensitive replacements to the base structure. This is mostly a grab bag of things like #1 or ;p
function = Copy
directory = Context
filenames = []
file_type = Length
name = X

[BASE_M]
is_terminal = True
inject_type = Markov
comments = Markov based brute force of a string. Currently based on John the Rippers Markov mode
function = Markov
directory = Markov
filenames = ["markov_prob.txt"]
file_type = Flat
name = M

