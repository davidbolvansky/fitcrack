[TRAINING_PROGRAM_DETAILS]
contact = cweir@vt.edu, ihranicky.fit.vutbr.cz
program = pcfg_trainer.py
version = 3.3m
author = Matt Weir, Radek Hranicky

[TRAINING_DATASET_DETAILS]
smoothing = 0.01
filename = /home/ihranicky/datasets/original/facebook-pastebay.txt
encoding = ascii
comments = None
number_of_passwords_in_set = 55
number_of_valid_passwords = 55

[START]
directory = Grammar
file_type = Flat
function = Transparent
replacements = [{"Config_id": "BASE_A", "Transition_id": "A"}, {"Config_id": "BASE_D", "Transition_id": "D"}, {"Config_id": "BASE_O", "Transition_id": "O"}, {"Config_id": "BASE_K", "Transition_id": "K"}, {"Config_id": "BASE_X", "Transition_id": "X"}, {"Config_id": "BASE_M", "Transition_id": "M"}]
name = Base Structure
inject_type = Wordlist
is_terminal = False
comments = Standard base structures as defined by the original PCFG Paper, with some renaming to prevent naming collisions. Examples are A4D2 from the training word "pass12"
filenames = ["Grammar.txt"]

[BASE_A]
directory = Alpha
file_type = Length
function = Shadow
replacements = [{"Config_id": "CAPITALIZATION", "Transition_id": "Capitalization"}]
name = A
inject_type = Wordlist
is_terminal = False
comments = (A)lpha letter replacements for base structure. Aka "pass12" = A4D2, so this is the A4. Note, this is encoding specific so non-ASCII characters may be considered alpha. For example Cyrillic characters will be considered alpha characters
filenames = ["1.txt", "2.txt", "3.txt", "4.txt", "5.txt", "6.txt", "7.txt", "8.txt", "9.txt", "10.txt", "11.txt", "12.txt", "14.txt"]

[BASE_D]
directory = Digits
file_type = Length
function = Copy
comments = (D)igit replacement for base structure. Aka "pass12" = L4D2, so this is the D2
inject_type = Copy
is_terminal = True
name = D
filenames = ["1.txt", "2.txt", "3.txt", "4.txt", "5.txt", "6.txt", "8.txt", "9.txt", "10.txt"]

[BASE_O]
directory = Other
file_type = Length
function = Copy
comments = (O)ther character replacement for base structure. Aka "pass$$" = L4S2, so this is the S2
inject_type = Copy
is_terminal = True
name = O
filenames = []

[CAPITALIZATION]
directory = Capitalization
file_type = Length
function = Capitalization
comments = Capitalization Masks for words. Aka LLLLUUUU for passWORD
inject_type = Copy
is_terminal = True
name = Capitalization
filenames = ["1.txt", "2.txt", "3.txt", "4.txt", "5.txt", "6.txt", "7.txt", "8.txt", "9.txt", "10.txt", "11.txt", "12.txt", "14.txt"]

[BASE_K]
directory = Keyboard
file_type = Length
function = Copy
comments = (K)eyboard replacement for base structure. Aka "test1qaz2wsx" = L4K4K4, so this is the K4s
inject_type = Copy
is_terminal = True
name = K
filenames = []

[BASE_X]
directory = Context
file_type = Length
function = Copy
comments = conte(X)t sensitive replacements to the base structure. This is mostly a grab bag of things like #1 or ;p
inject_type = Copy
is_terminal = True
name = X
filenames = []

[BASE_M]
directory = Markov
file_type = Flat
function = Markov
comments = Markov based brute force of a string. Currently based on John the Rippers Markov mode
inject_type = Markov
is_terminal = True
name = M
filenames = ["markov_prob.txt"]

